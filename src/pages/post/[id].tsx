import PostView from "@/components/PostView";
import { prisma } from "@/server/db";
import { api } from "@/utils/api";
import type { NextPage } from "next";
import Head from "next/head";

const PostDetailPage: NextPage<PostDetailPageProps> = ({ postId }) => {
  const { data: enhancedPost, isLoading: enhancedPostIsLoading } =
    api.posts.getSinglePostById.useQuery({ id: postId });

  if (!enhancedPost) return <div>404 | Post Not Found</div>;

  const { post, author } = enhancedPost;

  return (
    <>
      <Head>
        <title>{`${post.content} - @${author.username}`}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-700 md:max-w-2xl">
          <PostView post={post} author={author} />
        </div>
      </main>
    </>
  );
};

export interface PostDetailPageProps {
  postId: string;
}

export const getStaticPaths = async () => {
  const postIds = await prisma.post.findMany({
    select: {
      id: true,
    },
  });

  let paths = postIds.map((postId) => `/post/${postId.id}`);

  return {
    paths: paths,
    fallback: "blocking",
  };
};

export const getStaticProps = async (ctx: any) => {
  const postId = ctx.params.id.replace("/", "").replace("}", "");

  return {
    props: {
      postId,
    },
  };
};

export default PostDetailPage;
