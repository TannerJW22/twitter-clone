import { type GetStaticPropsContext, type NextPage } from "next";
import Head from "next/head";
import { api } from "@/utils/api";
import { clerkClient } from "@clerk/nextjs";
import { PostAuthor } from "@/utils";
import PostView from "@/components/PostView";
import { Post } from "@prisma/client";
import ProfileFeed from "@/components/ProfileFeed";

export const ProfilePage: NextPage<ProfilePageProps> = ({ username }) => {
  const { data: user, isLoading: userIsLoading } =
    api.profile.getUserByUsername.useQuery({
      username: username as PostAuthor["username"] as string,
    });

  if (userIsLoading) return <div>Loading...</div>;
  if (!user) return <div>404 | User Not Found</div>;

  return (
    <>
      {/* <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" /> */}
      <Head>
        <title>{username}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="-400 h-full w-full border-x text-white md:max-w-2xl">
          <div className="relative h-36 bg-slate-600">
            <img
              src={user.profileImageUrl}
              alt={`${user.username ?? "unknown"}'s profile pic`}
              width={128}
              height={128}
              className="absolute bottom-0 left-0 -mb-[64px] ml-4 rounded-full border-4 border-black bg-black"
            />
          </div>
          <div className="h-[64px]"></div>
          <div className="p-4 text-2xl font-bold">{`@${
            user.username ?? "unknown"
          }`}</div>
          <div className="w-full border-b border-slate-700" />
          <ProfileFeed user={user} />
        </div>
      </main>
    </>
  );
};

export interface ProfilePageProps {
  username: string;
}

export const getStaticPaths = async () => {
  const paths = (await clerkClient.users.getUserList()).map(
    (user) => `/@${user.username}`
  );

  return {
    paths: paths,
    fallback: false,
  };
};

export const getStaticProps = async (ctx: any) => {
  const username: string = ctx.params.slug.replace("@", "");

  // could theoretically fetch the user here (pre-render) but the ssgHelper was deprecated.
  // not sure how to resolve.

  return {
    props: {
      username,
    },
  };
};

export default ProfilePage;
